#!/usr/bin/env python

from datetime import datetime
from http.server import BaseHTTPRequestHandler, HTTPServer
from json import dumps, loads
from os.path import isfile
from time import strftime, time

class Status:
  def __init__(s):
    s.start_time = time()
    s.calls = 0
    [s.lifetime_calls, s.original_start] = s.read()

  def body(s):
    return {
      'calls': s.calls,
      'lifetime_calls': s.lifetime_calls,
      'original_start': s.original_start,
      'running': time() - s.start_time
    }

  def read(s):
    if isfile('status'):
      with open('status', 'r') as f:
        data = loads(f.read())
        return [data['lifetime_calls'], data['original_start']]
    else:
      return [0, strftime("%c")]

  def write(s):
    with open('status', 'w') as f:
      f.write(dumps(s.body()))

status = Status()

class Handler(BaseHTTPRequestHandler):
  def do_GET(s):
    status.lifetime_calls += 1

    if s.path == '/status':
      s.send_response(200)
      s.send_header("Content-type", "application/json")
      s.end_headers()

      status.calls += 1
      s.wfile.write(dumps(status.body()).encode())
    else:
      s.send_response(404)

if __name__ == "__main__":
  try:
    print("Ready to serve!")
    HTTPServer(('localhost', 8080), Handler).serve_forever()
  finally:
    print("Shutting down...")
    status.write()
    exit(0)

